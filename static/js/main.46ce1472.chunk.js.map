{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/Homepage/Homepage.js","state/ducks/books/action.js","state/ducks/books/types.js","containers/Homepage/index.js","containers/AddBook/AddBook.js","routes.js","components/Main/Main.js","components/Main/index.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/Homepage/BookStyles.js","components/Homepage/Book.js","components/Homepage/Books.js","components/Homepage/FilterSortBarStyles.js","components/Homepage/FilterSortBar.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","history.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","Homepage","props","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","searchTerm","searchType","toLowerCase","indexOf","author","sortedBooks","sortTerm","sort","book1","book2","console","log","parseInt","length","items","Container","React","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","connect","state","AddBook","id","routerProps","match","params","setState","isEdit","componentProps","Row","Col","xs","routes","path","exact","component","Main","route","Comp","MainLayout","document","Children","children","validationSchema","Yup","shape","required","review","min","goodReadsUrl","url","AddBookForm","initialValues","description","rating","imageUrl","status","onSubmit","values","updateBook","history","addBook","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","Button","post","push","put","defaultProps","withRouter","StyledBookCard","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardText","CardLink","href","target","rel","Books","item","md","StyledNavbarText","active","StyledInputGroup","InputGroup","changeFilter","search","activeFilter","dropdownOpen","setDropdownOpen","setValues","useEffect","fluid","style","padding","InputGroupButtonDropdown","addonType","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","e","App","Boolean","window","location","hostname","initialState","reducer","action","rootReducer","combineReducers","reducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.46ce1472.chunk.js","sourcesContent":["const navigation = {\n  left: [\n    {\n      title: \"HomePage\",\n      to: \"/\",\n    },\n    {\n      title: \"Read Books\",\n      to: \"/read-books\",\n    },\n  ],\n  right: [\n    {\n      title: \"+ Add Book\",\n      to: \"/add-book\",\n    },\n  ],\n};\n\nexport default navigation;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./styles\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n} from \"reactstrap\";\nimport navigation from \"../../navigation\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">\n          BookShelf App\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {navigation.left.map((nav) => {\n              return (\n                <NavItem>\n                  <NavLink tag={Link} to={nav.to}>\n                    {nav.title}\n                  </NavLink>\n                </NavItem>\n              );\n            })}\n          </Nav>\n          {navigation.right.map((nav) => {\n            return (\n              <NavbarText>\n                <NavLink tag={Link} to={nav.to}>\n                  {nav.title}\n                </NavLink>\n              </NavbarText>\n            );\n          })}\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","export const categories = [\"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"JAVA\"];\nexport const ratings = [1, 2, 3, 4, 5];\nexport const statuses = [\"Not read\", \"Read\"];\nexport const apiHost = \"https://5ebbfa35f2cfeb001697d47a.mockapi.io\";","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Books, FilterSortBar} from \"../../components\";\nimport {getBooks} from \"../../state/ducks/books/action\";\nimport {Container} from \"reactstrap\";\n\nclass Homepage extends React.Component{\n  constructor(props){\n    super(props)\n  }\n\n  componentDidMount() {\n      this.props.getBooks();\n  }\n\n  render(){\n    if(this.props.loading){\n      return <h1>BOOKS ARE LOADING...</h1>\n    }\n    const allBooks = this.props.books;\n    let filteredBooks = [];\n    /// Categorye gore filter\n    if(this.props.filter){\n      filteredBooks = allBooks.filter((book) => {\n        return book.category === this.props.filter\n      })\n    }else{\n      filteredBooks = allBooks;\n    }\n\n    /// Searchteme gore filter\n    if(this.props.searchTerm){\n      if(this.props.searchType === \"title\"){\n        filteredBooks = filteredBooks.filter((book) => {\n          return book.title.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1\n        })\n      } else{\n        filteredBooks = filteredBooks.filter((book) => {\n          return book.author.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1\n        })\n      }\n      \n    }\n\n    // Sorting\n    let sortedBooks = [];\n    if(this.props.sortTerm){\n      sortedBooks = [...filteredBooks].sort((book1, book2) => {\n         console.log(book1, book2, this.props.sortTerm);\n          return parseInt(book2[this.props.sortTerm]) - parseInt(book1[this.props.sortTerm])\n      });\n    }else{\n      sortedBooks = filteredBooks;\n    }\n\n\n    let books = \"\";\n    if(sortedBooks.length < 1){\n      books = <h2>NO BOOKS HERE</h2>\n    }else{\n      books = <Books items={sortedBooks}/>;\n    }\n    return <div>\n      <FilterSortBar />\n      <Container>\n        <div className=\"books-holder\">\n          {books}\n        </div>\n      </Container>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books.data,\n    loading: state.books.loading,\n    filter: state.books.filter,\n    searchTerm: state.books.searchTerm,\n    sortTerm: state.books.sortTerm,\n    searchType: state.books.searchType\n  }\n};\n\nconst mapDispatchToProps = {\n  getBooks\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n","import * as Actions from \"./types\";\nimport axios from \"axios\";\nimport {apiHost} from \"../../../constants\";\n\n\nexport const addBook = (values, history) => {\n    return dispatch => {\n        axios.post(`${apiHost}/books`, values).then((result) => {\n            dispatch({type: Actions.ADD_BOOK, payload: result.data})\n            history.push(\"/\");\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n};\n\n\nexport const updateBook = (id, values, history) => {\n    return (dispatch) => {\n        axios.put(`${apiHost}/books/${id}`, {\n        ...values,\n        })\n        .then((result) => {\n            history.push(\"/\");\n        }).catch((err) => {\n            console.log(err);\n        });\n    };\n};\n\nexport const getBooks = () => {\n    return dispatch => {\n        dispatch({type: Actions.LOAD_BOOKS});\n        axios.get(`${apiHost}/books`).then((result) => {\n            dispatch({type: Actions.SET_BOOKS, payload: result.data})\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n};\n\nexport const setFilter = (filter) => {\n    return dispatch => {\n        dispatch({type: Actions.SET_FILTER, payload: filter})\n    }\n};\n\nexport const searchBooks = (searchTerm) => {\n    return dispatch => {\n        dispatch({type: Actions.SEARCH_BOOKS, payload: searchTerm});\n    }\n};\n\nexport const sortBooks = (sortTerm) => {\n    return dispatch => {\n        dispatch({type: Actions.SORT_BOOKS, payload: sortTerm});\n    }\n};\n\nexport const searchValues = (values) => {\n    return dispatch => {\n        dispatch({type: Actions.SEARCH, payload:values})\n    }\n}","const SET_BOOKS = \"SET_BOOKS\";\nconst GET_BOOKS = \"GET_BOOKS\";\nconst ADD_BOOK  = \"ADD_BOOK\";\nconst LOAD_BOOKS = \"LOAD_BOOKS\";\nconst SET_FILTER = \"SET_FILTER\";\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\";\nconst SORT_BOOKS = \"SORT_BOOKS\"\nconst SEARCH = \"SEARCH\";\n\nexport {SET_BOOKS, GET_BOOKS, ADD_BOOK, LOAD_BOOKS, SET_FILTER, SEARCH_BOOKS, SORT_BOOKS, SEARCH}","import Homepage from \"./Homepage\";\n\nexport default Homepage;\n","import React from \"react\";\nimport { AddBookForm } from \"../../components\";\nimport { Row, Col } from \"reactstrap\";\nimport axios from \"axios\";\nimport {apiHost} from \"../../constants\";\n\nclass AddBook extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            book: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const id = this.props.routerProps.match.params.id;\n        if(id){\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\n                this.setState({\n                    book: result.data\n                })\n            });\n        }\n    }\n\n    render(){\n        const isEdit = this.props.componentProps.isEdit;\n        const id = this.props.routerProps.match.params.id;\n        return (\n            <Row>\n                <Col xs={12}>\n                    {\n                        isEdit ? <h3>Edit book</h3>: <h3>Add a new book</h3>\n                    }\n                </Col>\n                <Col xs={12}>\n                    <AddBookForm isEdit={isEdit} book={this.state.book}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\n\nexport default AddBook;\n","\nimport { Homepage, AddBook } from \"./containers\";\n\nconst routes = [\n  {\n    title: \"Home Page\",\n    path: \"/\",\n    exact: true,\n    componentProps: {\n    },\n    component: Homepage,\n  },\n  {\n    title: \"Add Book\",\n    path: \"/add-book\",\n    exact: false,\n    componentProps: {\n    },\n    component: AddBook,\n  },\n  {\n    title: \"Edit Book\",\n    path: \"/edit-book/:id\",\n    exact: false,\n    componentProps: {\n      isEdit: true\n    },\n    component: AddBook\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { MainLayout } from \"../../components\";\n\nconst Main = () => {\n  return (\n    <div>\n      <Switch>\n        {routes.map((route) => {\n          return (\n            <Route\n              path={route.path}\n              exact={route.exact}\n              component={(props) => {\n                const Comp = route.component;\n                return <MainLayout title={route.title} routerProps={props} componentProps={route.componentProps}>{Comp}</MainLayout>;\n              }}\n            />\n          );\n        })}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import Main from \"./Main\";\nimport \"./styles.js\";\n\nexport default Main;\n","import MainLayout from \"./MainLayout\";\n\nexport default MainLayout;\n","import React, { Component } from \"react\";\n\nclass MainLayout extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const title = this.props.title;\n    document.title = title;\n}\n\n  render() {\n    const Children = this.props.children;\n    return (\n      <div>\n        <Children routerProps={this.props.routerProps} componentProps={this.props.componentProps}/>\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Container } from \"reactstrap\";\nimport { Formik } from \"formik\";\nimport {categories, ratings, statuses} from \"../../constants\";\nimport {addBook, updateBook} from \"../../state/ducks/books/action\";\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router\";\n\n\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is a required field\"),\n    author: Yup.string().required(\"Author is a required field\"),\n    review: Yup.string().min(30, \"Review must be at least 30 characters\"),\n    goodReadsUrl: Yup.string().required().url(\"Url is not a valid.\")\n});\n\nconst AddBookForm = (props) => {\n    console.log(props);\n    let initialValues = {\n        title: \"\",\n        author: \"\",\n        category: \"\",\n        description: \"\",\n        review: \"\",\n        rating: \"\",\n        imageUrl: \"\",\n        goodReadsUrl: \"\",\n        status: \"\"\n    };\n    if(props.isEdit && props.book){\n        initialValues = {...props.book};\n    }\n  return (\n    <div>\n      <Container>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => {\n            if(props.isEdit) {\n              props.updateBook(props.book.id, values, props.history);\n            }else {\n              props.addBook(values, props.history)\n            }\n            \n        }}\n        enableReinitialize={true}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                placeholder=\"Name of the book\"\n                value={values.title}\n                onChange={handleChange}\n                invalid={errors.title}\n              />\n                {\n                    errors.title && <FormFeedback>{errors.title}</FormFeedback>\n                }\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"author\">Author</Label>\n              <Input\n                type=\"text\"\n                name=\"author\"\n                id=\"author\"\n                placeholder=\"Author of the book\"\n                value={values.author}\n                onChange={handleChange}\n                invalid={errors.author}\n              />\n                {\n                    errors.author && <FormFeedback>{errors.author}</FormFeedback>\n                }\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"imageUrl\">Image URL</Label>\n              <Input\n                type=\"text\"\n                name=\"imageUrl\"\n                id=\"imageUrl\"\n                placeholder=\"Image of the book\"\n                value={values.imageUrl}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"goodReadsUrl\">Goodreads Url</Label>\n            <Input\n              type=\"url\"\n              name=\"goodReadsUrl\"\n              id=\"goodReadsUrl\"\n              value={values.goodReadsUrl}\n              onChange={handleChange}\n              placeholder=\"GoodReads Url Giriniz\"\n              invalid={errors.goodReadsUrl}\n            />\n            {\n                    errors.goodReadsUrl && <FormFeedback>{errors.goodReadsUrl}</FormFeedback>\n            }\n        </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Category</Label>\n              <Input type=\"select\" name=\"category\" id=\"category\" value={values.category} onChange={handleChange}>\n                {categories.map((category) => {\n                  return <option>{category}</option>;\n                })}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleText\">Description</Label>\n              <Input type=\"textarea\" name=\"description\" id=\"description\" value={values.description}\n                     onChange={handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleText\">Review</Label>\n              <Input type=\"textarea\" name=\"review\" id=\"review\" value={values.review}\n                     onChange={handleChange} invalid={errors.review}/>\n                {\n                    errors.review && <FormFeedback>{errors.review}</FormFeedback>\n                }\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Rating</Label>\n              <Input type=\"select\" name=\"rating\" id=\"rating\" value={values.rating} onChange={handleChange}>\n                {ratings.map((score) => {\n                  return <option>{score}</option>;\n                })}\n              </Input>\n            </FormGroup>\n              <FormGroup>\n                  <Label for=\"exampleSelect\">Status</Label>\n                  <Input type=\"select\" name=\"status\" id=\"status\" value={values.status} onChange={handleChange}>\n                      {statuses.map((status) => {\n                          return <option>{status}</option>;\n                      })}\n                  </Input>\n              </FormGroup>\n              {\n                  props.isEdit ?\n                      <Button color=\"primary\">Save</Button> : <Button color=\"primary\">Add</Button>\n              }\n\n          </Form>\n        )}\n      </Formik>\n      </Container>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n    addBook: addBook,\n    updateBook: updateBook\n};\nAddBookForm.defaultProps = {\n  category: \"JavaScript\",\n  rating: 1\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm));\n","import AddBookForm from \"./AddBookForm\";\n\nexport default AddBookForm;\n","import styled from \"styled-components\";\nimport {Card} from \"reactstrap\";\n\nexport const StyledBookCard = styled(Card)`\n        height: 444px;\n        .card-img-top {\n        height: 250px;\n        }\n`;","import React from 'react';\nimport {CardImg, CardText, CardBody, CardLink, Row, Col } from \"reactstrap\";\nimport {StyledBookCard} from \"./BookStyles\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.css\"\n\nconst Book = (props) => {\n    const {imageUrl, rating, title, id, goodReadsUrl, review} = props;\n    return (\n       \n            \n            <StyledBookCard className=\"bookCard\">\n                <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n                <CardBody className=\"cardBody\">\n                    <CardText>\n                        <strong>{`${rating} / 5`}</strong>\n                    </CardText>\n                    <CardText>\n                    {title}\n                    </CardText>\n                    <CardLink>\n                     {review}\n                    </CardLink>\n                    <CardLink>\n                        <Link to={`/edit-book/${id}`}>Edit</Link>\n                    </CardLink>\n                    <CardLink>\n                        {goodReadsUrl && <a href={`${goodReadsUrl}`} target=\"_blank\" rel=\"noopener noreferrer\" >Good Reads</a>}\n                    </CardLink>\n                </CardBody>\n            </StyledBookCard>\n       \n    );\n};\n\nexport default Book;","import React from 'react';\nimport Book from \"./Book\";\nimport {Col, Row} from \"reactstrap\";\n\nconst Books = (props) => {\n    return (\n        <Row>\n            {\n                props.items.map((item) => {\n                    return <Col xs={12} md={3}>\n                        <Book {...item} />\n                    </Col>\n                })\n            }\n        </Row>\n    );\n};\n\nexport default Books;","import styled from \"styled-components\";\nimport {NavbarText, InputGroup } from 'reactstrap';\n\nexport const StyledNavbarText = styled(NavbarText)`\n    margin-left: 15px;\n    color: ${props => props.active ? \"#FF8247\" : \"#035491\"};\n    cursor: pointer;\n`;\n\nexport const StyledInputGroup = styled(InputGroup)`\n    display: inline-flex;\n    width: 50%;\n`;","import React, { useState, useEffect } from \"react\";\nimport {\n\tNav,\n\tContainer,\n\tRow,\n\tCol,\n\tInputGroup,\n\tInput,\t\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tInputGroupButtonDropdown,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbarText, StyledInputGroup } from \"./FilterSortBarStyles\";\nimport { categories } from \"../../constants\";\nimport {\n\tsetFilter,\n\tsearchBooks,\n\tsortBooks,\n} from \"../../state/ducks/books/action\";\n\n\nconst FilterSortBar = (props) => {\n\tconst [dropdownOpen, setDropdownOpen] = useState(false);\n\tconst toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n\t\n\tconst [values, setValues] = useState({\n\t\tsearchTerm: \"\",\n\t\tsearchType: \"title\"\n\t});\n\n\tuseEffect(() => {\n\t\tprops.search(values)\n\t}, [values])\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Container fluid className=\"bg-white\" style={{ padding: \"15px\" }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t\t<Nav className=\"bg-white\">\n\t\t\t\t\t\t\t<StyledNavbarText>\n\t\t\t\t\t\t\t\t<strong>Categories:</strong>\n\t\t\t\t\t\t\t</StyledNavbarText>\n\t\t\t\t\t\t\t<StyledNavbarText\n\t\t\t\t\t\t\t\tactive={!props.activeFilter}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.changeFilter(\"\");\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t\t</StyledNavbarText>\n\t\t\t\t\t\t\t{categories.map((category) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<StyledNavbarText\n\t\t\t\t\t\t\t\t\t\tactive={props.activeFilter === category}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.changeFilter(category);\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{category}\n\t\t\t\t\t\t\t\t\t</StyledNavbarText>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t\t<Row>\n                            <Col xs={12} md={6}>\n                            <InputGroup>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<InputGroupButtonDropdown\n\t\t\t\t\t\t\t\taddonType=\"append\"\n\t\t\t\t\t\t\t\tisOpen={dropdownOpen}\n\t\t\t\t\t\t\t\ttoggle={toggleDropDown}>\n\t\t\t\t\t\t\t\t<DropdownToggle caret>Search by: {values.searchType}</DropdownToggle>\n\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t<DropdownItem values=\"Title\" onClick={(e)=> {\n\t\t\t\t\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\t\t\t\tsearchType:\"Title\"\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}}>Search by Title</DropdownItem>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<DropdownItem values=\"Author\" onClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\t\t\t\t\tsearchType:\"Author\"\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}}>Search by Author</DropdownItem>\n\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t</InputGroupButtonDropdown>\n\t\t\t\t\t\t\t\n                            <Input onChange={(e) => {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\t\t\tsearchTerm: e.target.value\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</InputGroup>\n                            </Col>\n                       \n                            <Col xs={12} md={6}>\n                            <StyledInputGroup>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\tname=\"select\"\n\t\t\t\t\t\t\t\tid=\"exampleSelect\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tprops.sort(e.target.value);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<option value=\"\">No Sort</option>\n\t\t\t\t\t\t\t\t<option value=\"alphabetical\">Sort Alphabetical</option>\n\t\t\t\t\t\t\t\t<option value=\"rating\">Sort by Rating</option>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t</StyledInputGroup>\n                            </Col>\n\t\t\t\t\t\t\n                        </Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactiveFilter: state.books.filter,\n\n\t};\n};\n\nconst mapDispatchToProps = {\n\tchangeFilter: setFilter,\n\tsearch: searchBooks,\n\tsort: sortBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar);\n","import React from \"react\";\nimport { Header, Main } from \"./components\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Actions from \"./types\"\n\nconst initialState = {\n    data: [],\n    loading: false,\n    filter: \"\",\n    searchTerm: \"\",\n    sortTerm: \"\",\n    searchType: \"\"\n};\n\nconst booksReducer = (state=initialState, action) => {\n  switch (action.type) {\n      case Actions.ADD_BOOK:\n          return {\n              ...state,\n              data: [...state.data, action.payload]\n          };\n      case Actions.SET_BOOKS:\n          return {\n              ...state,\n              data: action.payload,\n              loading: false\n          }\n      case Actions.LOAD_BOOKS:\n          return {\n              ...state,\n              loading: true\n          };\n      case Actions.SET_FILTER:\n          return {\n              ...state,\n              filter: action.payload\n          };\n      case Actions.SEARCH_BOOKS:\n          return {\n              ...state,\n              searchTerm: action.payload.searchTerm,\n              searchType: action.payload.searchType\n          };\n      case Actions.SORT_BOOKS:\n          return {\n              ...state,\n              sortTerm: action.payload\n          };   \n      default:\n          return state;\n  }\n};\n\nexport default booksReducer;","import reducer from \"./reducers\";\n\nexport default reducer;","import * as reducers from \"./ducks\";\nimport {combineReducers, createStore, compose, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst rootReducer = combineReducers(reducers);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./state/store\";\nimport history from \"./history\";\n\nReactDOM.render(\n      <Provider store={store}>\n    <BrowserRouter history={history} basename=\"/bookshelf-app\">\n            <App />\n    </BrowserRouter>\n      </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}